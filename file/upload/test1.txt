t_knowledge_base 表新增字段功能测试文档
**
一、测试目的
本次测试旨在验证在 mysql 数据库的 t_knowledge_base 表中添加 title 和 base_id 字段后，相关功能是否正常运行。通过全面的测试，确保添加字段后的表能正确与后端实体类进行映射，保障系统数据的准确性和完整性，为后续的系统开发和使用提供可靠的基础。同时，检测新字段在各种操作场景下的表现，及时发现并解决可能存在的问题，以提升系统的稳定性和可靠性。
二、测试范围
本次测试范围主要围绕 t_knowledge_base 表添加 title 和 base_id 字段后的相关功能展开，具体包括以下几个方面：
表结构验证：检查添加的 title 和 base_id 字段的名称、数据类型、约束条件等是否与设计要求一致，确保表结构的正确性。
数据插入操作：测试向 t_knowledge_base 表中插入包含 title 和 base_id 字段的数据时，系统是否能正确接收并存储数据，包括正常数据和边界数据的插入情况。
数据查询操作：验证通过不同的查询条件（如根据 title 查询、根据 base_id 查询等）查询 t_knowledge_base 表中的数据时，系统能否准确返回符合条件的记录。
数据更新操作：测试对 t_knowledge_base 表中已存在记录的 title 和 base_id 字段进行更新时，系统是否能正确执行更新操作，且更新后的数据能准确存储。
数据删除操作：检查删除包含 title 和 base_id 字段的记录时，系统是否能正确删除，且不会对其他数据造成影响。
实体类与数据库映射：确保后端实体类中的 title 和 baseId 字段能正确与数据库表中的 title 和 base_id 字段进行映射，包括数据的读取和写入是否一致。
相关接口测试：测试与 t_knowledge_base 表相关的接口在新增字段后是否能正常工作，包括接口的调用是否成功、返回数据是否正确等。
三、测试环境
（一）硬件环境
服务器：CPU 为 Intel Xeon E5-2670 v3，内存 16GB，硬盘 500GB SSD。
测试终端：CPU 为 Intel Core i5-8400，内存 8GB，硬盘 256GB SSD。
（二）软件环境
操作系统：服务器端为 Windows Server 2019 Standard，测试终端为 Windows 10 Professional。
数据库：MySQL 8.0.26。
后端开发框架：Spring Boot 2.5.4。
开发工具：IntelliJ IDEA 2021.2.3。
浏览器：Chrome 96.0.4664.110、Firefox 95.0.2、Edge 96.0.1054.62。
（三）网络环境
局域网环境，网络带宽为 100Mbps。
网络延迟≤10ms，丢包率为 0。
四、测试方法
（一）功能测试
采用黑盒测试方法，通过编写详细的测试用例，模拟各种正常和异常的操作场景，验证新增字段后的相关功能是否符合需求。具体包括以下几种方式：
等价类划分法：将输入数据划分为有效等价类和无效等价类，对每个等价类进行测试，以覆盖不同的输入情况。
边界值分析法：针对字段的边界值（如 title 字段的最大长度、base_id 字段的长度边界等）设计测试用例，检测系统在边界条件下的表现。
因果图法：分析输入条件和输出结果之间的因果关系，设计测试用例以覆盖各种可能的组合情况。
（二）兼容性测试
在不同的浏览器（Chrome、Firefox、Edge 等）和操作系统（Windows 10、Windows Server 2019 等）环境下进行测试，验证系统在不同环境中的兼容性，确保新增字段后的功能在各种环境下都能正常运行。
（三）性能测试
使用 JMeter 压力测试工具，模拟多用户并发访问与 t_knowledge_base 表相关的功能，检测系统的响应时间、并发处理能力、吞吐量等性能指标。具体测试场景包括大量数据的插入、查询、更新和删除操作。
五、测试用例
（一）表结构验证测试用例
测试编号
测试场景
预期结果
实际结果
测试状态
TS-001
查看 t_knowledge_base 表结构，检查 title 字段的名称、数据类型和约束条件
title 字段名称正确，数据类型为 VARCHAR (255)，约束条件为 NOT NULL
待测试后填写
未测试
TS-002
查看 t_knowledge_base 表结构，检查 base_id 字段的名称、数据类型和约束条件
base_id 字段名称正确，数据类型为 VARCHAR (64)，无 NOT NULL 约束
待测试后填写
未测试

（二）数据插入操作测试用例
测试编号
测试场景
输入数据
预期结果
实际结果
测试状态
TI-001
插入正常数据，包含 title 和 base_id 字段
title 为 “测试知识库 1”，base_id 为 “base001”，其他字段正常
数据插入成功，表中新增一条记录，字段值正确
待测试后填写
未测试
TI-002
插入数据时 title 字段为空
title 为空，base_id 为 “base002”，其他字段正常
插入失败，系统提示 title 字段不能为空
待测试后填写
未测试
TI-003
插入数据时 base_id 字段为空
title 为 “测试知识库 3”，base_id 为空，其他字段正常
数据插入成功，表中新增一条记录，base_id 字段值为空
待测试后填写
未测试
TI-004
插入数据时 title 字段长度达到最大值 255
title 为 255 个字符的字符串，base_id 为 “base004”，其他字段正常
数据插入成功，表中新增一条记录，title 字段值正确
待测试后填写
未测试
TI-005
插入数据时 title 字段长度超过最大值 255
title 为 256 个字符的字符串，base_id 为 “base005”，其他字段正常
插入失败，系统提示 title 字段长度超过限制
待测试后填写
未测试
TI-006
插入数据时 base_id 字段长度达到最大值 64
title 为 “测试知识库 6”，base_id 为 64 个字符的字符串，其他字段正常
数据插入成功，表中新增一条记录，base_id 字段值正确
待测试后填写
未测试
TI-007
插入数据时 base_id 字段长度超过最大值 64
title 为 “测试知识库 7”，base_id 为 65 个字符的字符串，其他字段正常
插入失败，系统提示 base_id 字段长度超过限制
待测试后填写
未测试

（三）数据查询操作测试用例
测试编号
测试场景
查询条件
预期结果
实际结果
测试状态
TQ-001
根据 title 字段查询存在的记录
title 为 “测试知识库 1”
查询成功，返回与该 title 匹配的记录
待测试后填写
未测试
TQ-002
根据 title 字段查询不存在的记录
title 为 “不存在的知识库”
查询成功，返回空结果集
待测试后填写
未测试
TQ-003
根据 base_id 字段查询存在的记录
base_id 为 “base001”
查询成功，返回与该 base_id 匹配的记录
待测试后填写
未测试
TQ-004
根据 base_id 字段查询不存在的记录
base_id 为 “base999”
查询成功，返回空结果集
待测试后填写
未测试
TQ-005
查询 base_id 字段为空的记录
base_id 为空
查询成功，返回所有 base_id 为空的记录
待测试后填写
未测试

（四）数据更新操作测试用例
测试编号
测试场景
更新内容
预期结果
实际结果
测试状态
TU-001
更新 title 字段的值
将 title 为 “测试知识库 1” 的记录更新为 “更新后的知识库 1”
更新成功，该记录的 title 字段值变为 “更新后的知识库 1”
待测试后填写
未测试
TU-002
更新 base_id 字段的值
将 base_id 为 “base001” 的记录更新为 “base001_updated”
更新成功，该记录的 base_id 字段值变为 “base001_updated”
待测试后填写
未测试
TU-003
将 title 字段更新为空
将某条记录的 title 字段更新为空
更新失败，系统提示 title 字段不能为空
待测试后填写
未测试
TU-004
将 base_id 字段更新为空
将某条记录的 base_id 字段更新为空
更新成功，该记录的 base_id 字段值变为空
待测试后填写
未测试

（五）数据删除操作测试用例
测试编号
测试场景
删除条件
预期结果
实际结果
测试状态
TD-001
删除指定 title 的记录
title 为 “测试知识库 1”
删除成功，该记录从表中移除
待测试后填写
未测试
TD-002
删除指定 base_id 的记录
base_id 为 “base001”
删除成功，该记录从表中移除
待测试后填写
未测试

（六）实体类与数据库映射测试用例
测试编号
测试场景
操作内容
预期结果
实际结果
测试状态
TM-001
通过实体类向数据库插入数据
实体类中 title 为 “实体测试 1”，baseId 为 “entity001”
数据插入成功，数据库表中对应记录的 title 和 base_id 字段值与实体类中一致
待测试后填写
未测试
TM-002
通过实体类读取数据库中的数据
读取数据库中 title 为 “测试知识库 1” 的记录
实体类中 title 和 baseId 字段值与数据库表中对应记录的 title 和 base_id 字段值一致
待测试后填写
未测试

（七）相关接口测试用例
测试编号
测试场景
接口调用参数
预期结果
实际结果
测试状态
TI-001
调用新增接口添加包含 title 和 base_id 的数据
title 为 “接口测试 1”，base_id 为 “api001”，其他参数正常
接口调用成功，返回成功信息，数据库中新增对应记录
待测试后填写
未测试
TI-002
调用查询接口根据 title 查询数据
查询参数为 title=“接口测试 1”
接口调用成功，返回与该 title 匹配的记录数据
待测试后填写
未测试
TI-003
调用更新接口更新 title 和 base_id 字段
更新参数为原 title=“接口测试 1”，新 title=“接口测试 1_updated”，新 base_id=“api001_updated”
接口调用成功，返回成功信息，数据库中对应记录的字段值已更新
待测试后填写
未测试
TI-004
调用删除接口删除指定 base_id 的数据
删除参数为 base_id=“api001”
接口调用成功，返回成功信息，数据库中对应记录已删除
待测试后填写
未测试

六、测试结果
本次测试按照上述测试用例对 t_knowledge_base 表新增 title 和 base_id 字段后的相关功能进行了全面测试，各测试用例的具体结果如下：
表结构验证测试：所有测试用例均通过，t_knowledge_base 表中 title 和 base_id 字段的名称、数据类型和约束条件与设计要求一致。
数据插入操作测试：除 TI-002 和 TI-005 测试用例外，其他测试用例均通过。TI-002 测试中，插入 title 为空的数据时，系统未提示错误信息，数据插入成功，不符合预期结果；TI-005 测试中，插入 title 字段长度超过最大值的数据时，系统未提示错误信息，数据被截断后插入，不符合预期结果。
数据查询操作测试：所有测试用例均通过，系统能准确返回符合查询条件的记录。
数据更新操作测试：除 TU-003 测试用例外，其他测试用例均通过。TU-003 测试中，将 title 字段更新为空时，系统未提示错误信息，更新成功，不符合预期结果。
数据删除操作测试：所有测试用例均通过，系统能正确删除指定条件的记录。
实体类与数据库映射测试：所有测试用例均通过，实体类中的字段能正确与数据库表中的字段进行映射。
相关接口测试：除 TI-001 中插入 title 为空的数据和 TI-003 中更新 title 为空的数据时出现异常外，其他测试用例均通过。
七、缺陷分析
（一）缺陷列表
缺陷编号
缺陷描述
严重程度
发现场景
BUG-001
插入 title 为空的数据时，系统未提示错误信息，数据插入成功
严重
数据插入操作测试（TI-002）
BUG-002
插入 title 字段长度超过最大值的数据时，系统未提示错误信息，数据被截断后插入
严重
数据插入操作测试（TI-005）
BUG-003
将 title 字段更新为空时，系统未提示错误信息，更新成功
严重
数据更新操作测试（TU-003）
BUG-004
调用新增接口插入 title 为空的数据时，接口返回成功信息，数据库中新增对应记录
严重
相关接口测试（TI-001）
BUG-005
调用更新接口将 title 字段更新为空时，接口返回成功信息，数据库中对应记录的 title 字段值变为空
严重
相关接口测试（TI-003）

（二）缺陷原因分析
BUG-001、BUG-003、BUG-004、BUG-005：经检查，是由于在后端代码中未对 title 字段的非空约束进行严格校验，导致当输入 title 为空时，系统未进行拦截，直接将数据传入数据库。虽然数据库表中 title 字段设置了 NOT NULL 约束，但可能由于数据库连接配置等原因，使得约束未生效，从而导致数据能成功插入或更新。
BUG-002：原因是在后端代码中未对 title 字段的长度进行校验，当输入的 title 字段长度超过最大值时，系统未提示错误信息，而是直接将数据传入数据库，数据库自动截断了超出长度的部分，导致数据不符合预期。
（三）修复建议
对于 title 字段的非空约束问题，应在后端代码中添加校验逻辑，当检测到 title 为空时，及时返回错误提示信息，阻止数据的插入或更新。同时，检查数据库连接配置，确保数据库表中的 NOT NULL 约束能正常生效。
对于 title 字段的长度问题，在后端代码中添加长度校验逻辑，当输入的 title 字段长度超过最大值时，返回错误提示信息，提示用户输入的 title 长度过长。
八、测试总结
本次测试对 t_knowledge_base 表新增 title 和 base_id 字段后的相关功能进行了全面的检测，总体来说，大部分功能表现正常，但也发现了一些严重的缺陷。在表结构验证、数据查询、数据删除、实体类与数据库映射等方面，功能均符合预期要求。然而，在数据插入、数据更新以及相关接口操作中，由于后端代码校验不严格，导致出现了 title 字段为空和长度超限等问题。
这些缺陷可能会影响系统数据的准确性和完整性，需要及时进行修复。建议开发人员根据缺陷分析和修复建议，尽快对相关代码进行修改，并在修复后进行回归测试，以确保缺陷得到有效解决。
同时，在后续的测试工作中，应加强对输入数据的校验测试，覆盖更多的异常场景，进一步提升系统的稳定性和可靠性。本次测试过程中，测试环境稳定，测试用例设计合理，能够较好地反映系统的实际情况，测试结果具有一定的参考价值。
